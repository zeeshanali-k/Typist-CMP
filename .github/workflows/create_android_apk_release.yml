name: Upload APK in Releases
on:
  push:
    branches: [ "main" ]

jobs:
  apk:
    name: Upload APK in Releases
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        
      - name: Grant Permission to Execute
        run: chmod +x gradlew
        
      - name: Build debug APK
        run: bash ./gradlew :androidApp:assembleDebug --stacktrace
        
      - name: Upload APK to Github Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: androidApp/build/outputs/apk/debug/androidApp-debug.apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          tag_name: 1.0.1
          release_name: "Typist"
          draft: false
          prerelease: false
          
      - name: Upload APK to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./androidApp/build/outputs/apk/debug/androidApp-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/zip
